{"ast":null,"code":"var _jsxFileName = \"/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/home/src/App.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createUsers } from 'rootRedux/features/users';\nimport staticReducers from 'rootRedux/rootReducer';\n\nvar RemoteApp = function RemoteApp() {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setTimeout(function () {\n      return dispatch(createUsers());\n    }, 4000);\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"RemoteApp\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"HomeApp name from the redux store\"));\n};\n\nvar RemoteAppWrapper = function RemoteAppWrapper(props) {\n  var store = props.store;\n  useEffect(function () {\n    Object.keys(staticReducers).forEach(function (key) {\n      store.injectReducer(key, staticReducers[key]);\n    });\n  }, []);\n  return __jsx(Provider, {\n    store: store || {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(RemoteApp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RemoteAppWrapper;","map":{"version":3,"sources":["/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/home/src/App.tsx"],"names":["React","useEffect","Provider","useDispatch","createUsers","staticReducers","RemoteApp","dispatch","setTimeout","marginTop","RemoteAppWrapper","props","store","Object","keys","forEach","key","injectReducer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,UAAU,CAAC;AAAA,aAAMD,QAAQ,CAACH,WAAW,EAAZ,CAAd;AAAA,KAAD,EAAgC,IAAhC,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,CADF;AAMD,CAbD;;AAeA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAgB;AACvC,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,MAAM,CAACC,IAAP,CAAYT,cAAZ,EAA4BU,OAA5B,CAAoC,UAACC,GAAD,EAAS;AAC3CJ,MAAAA,KAAK,CAACK,aAAN,CAAoBD,GAApB,EAAyBX,cAAc,CAACW,GAAD,CAAvC;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAK,IAAI,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAdD;;AAgBA,eAAeF,gBAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createUsers } from 'rootRedux/features/users';\nimport staticReducers from 'rootRedux/rootReducer';\n\nconst RemoteApp = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTimeout(() => dispatch(createUsers()), 4000);\n  }, []);\n\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <div>RemoteApp</div>\n      <div>HomeApp name from the redux store</div>\n    </div>\n  );\n};\n\nconst RemoteAppWrapper = (props: any) => {\n  const { store } = props;\n\n  useEffect(() => {\n    Object.keys(staticReducers).forEach((key) => {\n      store.injectReducer(key, staticReducers[key]);\n    });\n  }, []);\n\n  return (\n    <Provider store={store || {}}>\n      <RemoteApp />\n    </Provider>\n  );\n};\n\nexport default RemoteAppWrapper;\n"]},"metadata":{},"sourceType":"module"}