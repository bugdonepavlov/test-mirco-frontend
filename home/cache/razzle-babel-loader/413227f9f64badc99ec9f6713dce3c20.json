{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // eslint-disable-next-line import/no-unresolved\n\nimport { LoadingState } from 'generic/commonTypes';\nconsole.log('====LoadingState', LoadingState.idle);\nvar initialState = {\n  list: [{\n    id: Math.random().toString(16),\n    title: 'User 1'\n  }],\n  // loading: LoadingState.idle,\n  errors: ''\n};\nexport var usersSlice = createSlice({\n  name: 'users',\n  initialState: initialState,\n  reducers: {\n    tryLogout: function tryLogout() {\n      return initialState;\n    },\n    tryCreateUserRequest: function tryCreateUserRequest(state) {// state.loading = LoadingState.pending;\n    },\n    tryCreateUserSuccess: function tryCreateUserSuccess(state, _ref) {\n      var payload = _ref.payload;\n      // state.loading = LoadingState.fulfilled;\n      state.list.push(payload);\n    },\n    tryCreateUserFailled: function tryCreateUserFailled(state, _ref2) {// state.loading = LoadingState.failled;\n\n      var payload = _ref2.payload;\n    }\n  }\n});\nexport default usersSlice.reducer;\nvar _usersSlice$actions = usersSlice.actions,\n    tryCreateUserFailled = _usersSlice$actions.tryCreateUserFailled,\n    tryCreateUserSuccess = _usersSlice$actions.tryCreateUserSuccess,\n    tryCreateUserRequest = _usersSlice$actions.tryCreateUserRequest;\nexport { tryCreateUserFailled, tryCreateUserSuccess, tryCreateUserRequest };\nexport var usersSelector = function usersSelector(state) {\n  return state.users;\n};","map":{"version":3,"sources":["/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/home/src/rootRedux/features/users/users.slice.ts"],"names":["createSlice","LoadingState","console","log","idle","initialState","list","id","Math","random","toString","title","errors","usersSlice","name","reducers","tryLogout","tryCreateUserRequest","state","tryCreateUserSuccess","payload","push","tryCreateUserFailled","reducer","actions","usersSelector","users"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C,C,CACA;;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,YAAY,CAACG,IAA7C;AAQA,IAAMC,YAA0B,GAAG;AACjCC,EAAAA,IAAI,EAAE,CAAC;AAAEC,IAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,CAAN;AAAkCC,IAAAA,KAAK,EAAE;AAAzC,GAAD,CAD2B;AAEjC;AACAC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAMA,OAAO,IAAMC,UAAU,GAAGb,WAAW,CAAC;AACpCc,EAAAA,IAAI,EAAE,OAD8B;AAEpCT,EAAAA,YAAY,EAAZA,YAFoC;AAGpCU,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AAAA,aAAMX,YAAN;AAAA,KADH;AAGRY,IAAAA,oBAAoB,EAAE,8BAACC,KAAD,EAAW,CAC/B;AACD,KALO;AAMRC,IAAAA,oBAAoB,EAAE,8BAACD,KAAD,QAA4C;AAAA,UAAlCE,OAAkC,QAAlCA,OAAkC;AAChE;AACAF,MAAAA,KAAK,CAACZ,IAAN,CAAWe,IAAX,CAAgBD,OAAhB;AACD,KATO;AAURE,IAAAA,oBAAoB,EAAE,8BAACJ,KAAD,SAA+C,CACnE;;AADmE,UAArCE,OAAqC,SAArCA,OAAqC;AAEpE;AAZO;AAH0B,CAAD,CAA9B;AAmBP,eAAeP,UAAU,CAACU,OAA1B;AAEO,0BAA6EV,UAAU,CAACW,OAAxF;AAAA,IAAQF,oBAAR,uBAAQA,oBAAR;AAAA,IAA8BH,oBAA9B,uBAA8BA,oBAA9B;AAAA,IAAoDF,oBAApD,uBAAoDA,oBAApD;;AAEP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACP,KAAD;AAAA,SAAoCA,KAAK,CAACQ,KAA1C;AAAA,CAAtB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-unresolved\nimport { LoadingState } from 'generic/commonTypes';\n\nconsole.log('====LoadingState', LoadingState.idle);\n\nexport interface InitialState {\n  list: any[];\n  // loading: string;\n  errors: string;\n}\n\nconst initialState: InitialState = {\n  list: [{ id: Math.random().toString(16), title: 'User 1' }],\n  // loading: LoadingState.idle,\n  errors: '',\n};\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    tryLogout: () => initialState,\n\n    tryCreateUserRequest: (state) => {\n      // state.loading = LoadingState.pending;\n    },\n    tryCreateUserSuccess: (state, { payload }: PayloadAction<any>) => {\n      // state.loading = LoadingState.fulfilled;\n      state.list.push(payload);\n    },\n    tryCreateUserFailled: (state, { payload }: PayloadAction<string>) => {\n      // state.loading = LoadingState.failled;\n    },\n  },\n});\n\nexport default usersSlice.reducer;\n\nexport const { tryCreateUserFailled, tryCreateUserSuccess, tryCreateUserRequest } = usersSlice.actions;\n\nexport const usersSelector = (state: { users: InitialState }) => state.users;\n"]},"metadata":{},"sourceType":"module"}