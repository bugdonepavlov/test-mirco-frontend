{"ast":null,"code":"var _jsxFileName = \"/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/home/src/App.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport reducer, { changeAppNameAction } from './reducer';\nvar remoteAppScope = 'remoteApp';\n\nvar RemoteApp = function RemoteApp() {\n  var dispatch = useDispatch();\n  var state = useSelector(function (state) {\n    return state[remoteAppScope];\n  });\n\n  var _useState = useState(''),\n      remoteAppInput = _useState[0],\n      setRemoteAppInput = _useState[1];\n\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"RemoteApp\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"RemoteApp's name from the redux store : \", state && state.appName), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    style: {\n      marginRight: '10px'\n    },\n    type: \"text\",\n    onChange: function onChange(e) {\n      setRemoteAppInput(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return dispatch(changeAppNameAction(remoteAppInput));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Dispatch RemoteApp new name\")));\n};\n\nvar RemoteAppWrapper = function RemoteAppWrapper(props) {\n  var store = props.store;\n  useEffect(function () {\n    store.injectReducer(remoteAppScope, reducer);\n  }, []);\n  return __jsx(Provider, {\n    store: store || {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(RemoteApp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RemoteAppWrapper;","map":{"version":3,"sources":["/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/home/src/App.tsx"],"names":["React","useState","Provider","useSelector","useDispatch","useEffect","reducer","changeAppNameAction","remoteAppScope","RemoteApp","dispatch","state","remoteAppInput","setRemoteAppInput","marginTop","appName","marginRight","e","target","value","RemoteAppWrapper","props","store","injectReducer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,aAAnD;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,OAAP,IAAkBC,mBAAlB,QAA6C,WAA7C;AAEA,IAAMC,cAAc,GAAG,WAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,KAAK,GAAGR,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACH,cAAD,CAAhB;AAAA,GAAD,CAAzB;;AACA,kBAA4CP,QAAQ,CAAC,EAAD,CAApD;AAAA,MAAOW,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,SACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA8CH,KAAK,IAAIA,KAAK,CAACI,OAA7D,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACfJ,MAAAA,iBAAiB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMT,QAAQ,CAACH,mBAAmB,CAACK,cAAD,CAApB,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCARF,CAJF,CADF;AAiBD,CAtBD;;AAwBA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,MAAQC,KAAR,GAAkBD,KAAlB,CAAQC,KAAR;AACAjB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,KAAK,CAACC,aAAN,CAAoBf,cAApB,EAAoCF,OAApC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEgB,KAAK,IAAI,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAXD;;AAaA,eAAeF,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport reducer, { changeAppNameAction } from './reducer';\n\nconst remoteAppScope = 'remoteApp';\n\nconst RemoteApp = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state[remoteAppScope]);\n  const [remoteAppInput, setRemoteAppInput] = useState('');\n\n  return (\n    <div style={{ marginTop: '10px' }}>\n      <div>RemoteApp</div>\n      <div>RemoteApp's name from the redux store : {state && state.appName}</div>\n\n      <div>\n        <input\n          style={{ marginRight: '10px' }}\n          type=\"text\"\n          onChange={(e) => {\n            setRemoteAppInput(e.target.value);\n          }}\n        />\n        <button onClick={() => dispatch(changeAppNameAction(remoteAppInput))}>Dispatch RemoteApp new name</button>\n      </div>\n    </div>\n  );\n};\n\nconst RemoteAppWrapper = (props) => {\n  const { store } = props;\n  useEffect(() => {\n    store.injectReducer(remoteAppScope, reducer);\n  }, []);\n\n  return (\n    <Provider store={store || {}}>\n      <RemoteApp />\n    </Provider>\n  );\n};\n\nexport default RemoteAppWrapper;\n"]},"metadata":{},"sourceType":"module"}