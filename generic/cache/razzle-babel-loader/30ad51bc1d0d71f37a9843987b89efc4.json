{"ast":null,"code":"var _jsxFileName = \"/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/generic/src/App.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport User from 'pages/User'; // import LocalButton from './Button';\n\nimport { store as hostStore } from './rootRedux/store';\nimport { store as usersStore } from 'users/redux/store';\nimport usersReducer from 'users/redux/users/users.slice'; // const RemoteButton = React.lazy(() => import(\"home/Button\"));\n\nvar App = function App() {\n  useEffect(function () {\n    // Inject usersReducer inside host store if this microfrontend initializes inside the host app.\n    // @ts-ignore\n    if (usersStore) hostStore.injectReducer('users', usersReducer);\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Bi-Directional\"), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"App 1\"), __jsx(Routes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Route, {\n    path: \"/\",\n    element: __jsx(User, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 34\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/generic/src/App.tsx"],"names":["React","useEffect","Routes","Route","User","store","hostStore","usersStore","usersReducer","App","injectReducer"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CACA;;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,mBAAnC;AACA,SAASD,KAAK,IAAIE,UAAlB,QAAoC,mBAApC;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CAEA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChBR,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAIM,UAAJ,EAAgBD,SAAS,CAACI,aAAV,CAAwB,OAAxB,EAAiCF,YAAjC;AACjB,GAJQ,EAIN,EAJM,CAAT;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAIE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,OAAO,EAAE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAeD,CAtBD;;AAwBA,eAAeC,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport User from 'pages/User';\n// import LocalButton from './Button';\nimport { store as hostStore } from './rootRedux/store';\nimport { store as usersStore } from 'users/redux/store';\nimport usersReducer from 'users/redux/users/users.slice';\n\n// const RemoteButton = React.lazy(() => import(\"home/Button\"));\n\nconst App = () => {\n  useEffect(() => {\n    // Inject usersReducer inside host store if this microfrontend initializes inside the host app.\n    // @ts-ignore\n    if (usersStore) hostStore.injectReducer('users', usersReducer);\n  }, []);\n\n  return (\n    <div>\n      <h1>Bi-Directional</h1>\n      <h2>App 1</h2>\n\n      <Routes>\n        <Route path=\"/\" element={<User />} />\n        {/* <Route path=\"dashboard\" element={<Dashboard title=\"dashboard\" />} /> */}\n      </Routes>\n      {/* <LocalButton /> */}\n      {/* <React.Suspense fallback=\"Loading Button\">\n        <RemoteButton />\n      </React.Suspense> */}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}