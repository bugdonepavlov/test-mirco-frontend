{"ast":null,"code":"var _jsxFileName = \"/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/generic/src/App.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Users from 'pages/Users';\nimport { Provider } from 'react-redux';\nimport { store } from './rootRedux/store';\nvar RemoteApp = /*#__PURE__*/React.lazy(function () {\n  return import('home/RemoteApp');\n});\n\nvar App = function App() {\n  // useEffect(() => {\n  //   // Inject usersReducer inside host store if this microfrontend initializes inside the host app.\n  //   // @ts-ignore\n  //   if (usersStore) hostStore.injectReducer('users', usersReducer);\n  // }, []);\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Bi-Directional\"), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"App 1\"), __jsx(React.Suspense, {\n    fallback: \"Loading Button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(RemoteApp, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), __jsx(Routes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Route, {\n    path: \"/\",\n    element: __jsx(Users, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 36\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/generic/src/App.tsx"],"names":["React","Routes","Route","Users","Provider","store","RemoteApp","lazy","App"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,IAAMC,SAAS,gBAAGN,KAAK,CAACO,IAAN,CAAW;AAAA,SAAM,OAAO,gBAAP,CAAN;AAAA,CAAX,CAAlB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB;AACA;AACA;AACA;AACA;AAEA,SACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,EAAC,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,EAOE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,OAAO,EAAE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF;AAoBD,CA3BD;;AA6BA,eAAeG,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Users from 'pages/Users';\nimport { store as hostStore } from './rootRedux/store';\nimport { Provider } from 'react-redux';\nimport { store } from './rootRedux/store';\n\nconst RemoteApp = React.lazy(() => import('home/RemoteApp'));\n\nconst App = () => {\n  // useEffect(() => {\n  //   // Inject usersReducer inside host store if this microfrontend initializes inside the host app.\n  //   // @ts-ignore\n  //   if (usersStore) hostStore.injectReducer('users', usersReducer);\n  // }, []);\n\n  return (\n    <Provider store={store}>\n      <div>\n        <h1>Bi-Directional</h1>\n        <h2>App 1</h2>\n        <React.Suspense fallback=\"Loading Button\">\n          <RemoteApp store={store} />\n        </React.Suspense>\n\n        <Routes>\n          <Route path=\"/\" element={<Users />} />\n          {/* <Route path=\"dashboard\" element={<Dashboard title=\"dashboard\" />} /> */}\n        </Routes>\n        {/* <LocalButton /> */}\n        {/* <React.Suspense fallback=\"Loading Button\">\n        <RemoteButton />\n      </React.Suspense> */}\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}