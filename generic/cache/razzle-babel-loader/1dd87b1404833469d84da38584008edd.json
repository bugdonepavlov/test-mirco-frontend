{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { LoadingState } from '../../../types/common';\nvar initialState = {\n  token: null,\n  loading: LoadingState.idle,\n  errors: ''\n};\nexport var authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    tryLogout: function tryLogout() {\n      return initialState;\n    },\n    tryAuthLoginRequest: function tryAuthLoginRequest(state) {\n      state.loading = LoadingState.pending;\n    },\n    tryAuthLoginSuccess: function tryAuthLoginSuccess(state, _ref) {\n      var payload = _ref.payload;\n      state.loading = LoadingState.fulfilled;\n      state.token = payload;\n    },\n    tryAuthLoginFailled: function tryAuthLoginFailled(state, _ref2) {\n      var payload = _ref2.payload;\n      state.loading = LoadingState.failled;\n      state.token = payload;\n    },\n    tryAuthSignUpRequest: function tryAuthSignUpRequest(state) {\n      state.loading = LoadingState.pending;\n    },\n    tryAuthSignUpSuccess: function tryAuthSignUpSuccess(state, _ref3) {\n      var payload = _ref3.payload;\n      state.loading = LoadingState.fulfilled;\n      state.token = payload;\n    },\n    tryAuthSignUpFailled: function tryAuthSignUpFailled(state, _ref4) {\n      var payload = _ref4.payload;\n      state.loading = LoadingState.failled;\n      state.token = payload;\n    }\n  }\n});\nexport default authSlice.reducer;\nvar _authSlice$actions = authSlice.actions,\n    tryAuthLoginFailled = _authSlice$actions.tryAuthLoginFailled,\n    tryAuthLoginSuccess = _authSlice$actions.tryAuthLoginSuccess,\n    tryAuthLoginRequest = _authSlice$actions.tryAuthLoginRequest,\n    tryAuthSignUpRequest = _authSlice$actions.tryAuthSignUpRequest,\n    tryAuthSignUpSuccess = _authSlice$actions.tryAuthSignUpSuccess,\n    tryAuthSignUpFailled = _authSlice$actions.tryAuthSignUpFailled,\n    tryLogout = _authSlice$actions.tryLogout;\nexport { tryAuthLoginFailled, tryAuthLoginSuccess, tryAuthLoginRequest, tryAuthSignUpRequest, tryAuthSignUpSuccess, tryAuthSignUpFailled, tryLogout };\nexport var authSelector = function authSelector(state) {\n  return state.auth;\n};","map":{"version":3,"sources":["/Users/bugdonepavlov/Desktop/work/module-federation-test/with-module-federation/generic/src/rootRedux/features/auth/authSlice.ts"],"names":["createSlice","LoadingState","initialState","token","loading","idle","errors","authSlice","name","reducers","tryLogout","tryAuthLoginRequest","state","pending","tryAuthLoginSuccess","payload","fulfilled","tryAuthLoginFailled","failled","tryAuthSignUpRequest","tryAuthSignUpSuccess","tryAuthSignUpFailled","reducer","actions","authSelector","auth"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,YAAT,QAA6B,uBAA7B;AAQA,IAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,EAAE,IAD0B;AAEjCC,EAAAA,OAAO,EAAEH,YAAY,CAACI,IAFW;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAMA,OAAO,IAAMC,SAAS,GAAGP,WAAW,CAAC;AACnCQ,EAAAA,IAAI,EAAE,MAD6B;AAEnCN,EAAAA,YAAY,EAAZA,YAFmC;AAGnCO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE;AAAA,aAAMR,YAAN;AAAA,KADH;AAGRS,IAAAA,mBAAmB,EAAE,6BAACC,KAAD,EAAW;AAC9BA,MAAAA,KAAK,CAACR,OAAN,GAAgBH,YAAY,CAACY,OAA7B;AACD,KALO;AAMRC,IAAAA,mBAAmB,EAAE,6BAACF,KAAD,QAA+C;AAAA,UAArCG,OAAqC,QAArCA,OAAqC;AAClEH,MAAAA,KAAK,CAACR,OAAN,GAAgBH,YAAY,CAACe,SAA7B;AACAJ,MAAAA,KAAK,CAACT,KAAN,GAAcY,OAAd;AACD,KATO;AAURE,IAAAA,mBAAmB,EAAE,6BAACL,KAAD,SAA+C;AAAA,UAArCG,OAAqC,SAArCA,OAAqC;AAClEH,MAAAA,KAAK,CAACR,OAAN,GAAgBH,YAAY,CAACiB,OAA7B;AACAN,MAAAA,KAAK,CAACT,KAAN,GAAcY,OAAd;AACD,KAbO;AAeRI,IAAAA,oBAAoB,EAAE,8BAACP,KAAD,EAAW;AAC/BA,MAAAA,KAAK,CAACR,OAAN,GAAgBH,YAAY,CAACY,OAA7B;AACD,KAjBO;AAkBRO,IAAAA,oBAAoB,EAAE,8BAACR,KAAD,SAA+C;AAAA,UAArCG,OAAqC,SAArCA,OAAqC;AACnEH,MAAAA,KAAK,CAACR,OAAN,GAAgBH,YAAY,CAACe,SAA7B;AACAJ,MAAAA,KAAK,CAACT,KAAN,GAAcY,OAAd;AACD,KArBO;AAsBRM,IAAAA,oBAAoB,EAAE,8BAACT,KAAD,SAA+C;AAAA,UAArCG,OAAqC,SAArCA,OAAqC;AACnEH,MAAAA,KAAK,CAACR,OAAN,GAAgBH,YAAY,CAACiB,OAA7B;AACAN,MAAAA,KAAK,CAACT,KAAN,GAAcY,OAAd;AACD;AAzBO;AAHyB,CAAD,CAA7B;AAgCP,eAAeR,SAAS,CAACe,OAAzB;AAEO,yBAUHf,SAAS,CAACgB,OAVP;AAAA,IACLN,mBADK,sBACLA,mBADK;AAAA,IAELH,mBAFK,sBAELA,mBAFK;AAAA,IAGLH,mBAHK,sBAGLA,mBAHK;AAAA,IAKLQ,oBALK,sBAKLA,oBALK;AAAA,IAMLC,oBANK,sBAMLA,oBANK;AAAA,IAOLC,oBAPK,sBAOLA,oBAPK;AAAA,IASLX,SATK,sBASLA,SATK;;AAYP,OAAO,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAACZ,KAAD;AAAA,SAAmCA,KAAK,CAACa,IAAzC;AAAA,CAArB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { LoadingState } from '../../../types/common';\n\nexport interface InitialState {\n  token: null | string;\n  loading: string;\n  errors: string;\n}\n\nconst initialState: InitialState = {\n  token: null,\n  loading: LoadingState.idle,\n  errors: '',\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    tryLogout: () => initialState,\n\n    tryAuthLoginRequest: (state) => {\n      state.loading = LoadingState.pending;\n    },\n    tryAuthLoginSuccess: (state, { payload }: PayloadAction<string>) => {\n      state.loading = LoadingState.fulfilled;\n      state.token = payload;\n    },\n    tryAuthLoginFailled: (state, { payload }: PayloadAction<string>) => {\n      state.loading = LoadingState.failled;\n      state.token = payload;\n    },\n\n    tryAuthSignUpRequest: (state) => {\n      state.loading = LoadingState.pending;\n    },\n    tryAuthSignUpSuccess: (state, { payload }: PayloadAction<string>) => {\n      state.loading = LoadingState.fulfilled;\n      state.token = payload;\n    },\n    tryAuthSignUpFailled: (state, { payload }: PayloadAction<string>) => {\n      state.loading = LoadingState.failled;\n      state.token = payload;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n\nexport const {\n  tryAuthLoginFailled,\n  tryAuthLoginSuccess,\n  tryAuthLoginRequest,\n\n  tryAuthSignUpRequest,\n  tryAuthSignUpSuccess,\n  tryAuthSignUpFailled,\n\n  tryLogout,\n} = authSlice.actions;\n\nexport const authSelector = (state: { auth: InitialState }) => state.auth;\n"]},"metadata":{},"sourceType":"module"}